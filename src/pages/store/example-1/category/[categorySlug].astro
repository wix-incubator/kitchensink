---
import { loadCurrentCartServiceConfig } from '@wix/headless-ecom/services';
import { loadCategoriesConfig, loadCollectionServiceConfig } from '@wix/headless-stores/services';
import BaseLayout from '../../../../layouts/BaseLayout.astro';
import StoreCollectionPage from '../../../../react-pages/store/example-1/index';

// Get category slug from URL params
const { categorySlug } = Astro.params;


// Load categories and cart config in parallel (cart is independent)
const [categoriesConfig, currentCartServiceConfig] = await Promise.all([
  loadCategoriesConfig(),
  loadCurrentCartServiceConfig(),
]);

// Find category by its real slug
const selectedCategory = categoriesConfig.categories.find(
  (cat: any) => cat.slug === categorySlug
);

// Load collection config with selected category (pass pre-loaded categories)
const filteredCollectionServiceConfig = await loadCollectionServiceConfig(
  selectedCategory?._id || undefined,
  Astro.url.searchParams,
  categoriesConfig.categories
);

// If category not found, return 404
if (!selectedCategory) {
  return Astro.rewrite('/404');
}
---

<BaseLayout>
  <StoreCollectionPage
    client:load
    filteredCollectionServiceConfig={filteredCollectionServiceConfig}
    currentCartServiceConfig={currentCartServiceConfig}
    categoriesConfig={{
      ...categoriesConfig,
      initialCategoryId: selectedCategory._id,
    }}
    slot="body"
  />
</BaseLayout>
