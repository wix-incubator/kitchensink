---
import BaseLayout from '../../../../layouts/BaseLayout.astro';
import StoreCollectionPage from '../../../../react-pages/store/example-1/index';
import { loadProductsListServiceConfig } from '@wix/headless-stores/services';
import { loadCurrentCartServiceConfig } from '@wix/headless-ecom/services';
import { loadCategoriesListServiceConfig } from '@wix/headless-stores/services';
import { loadSEOTagsServiceConfig } from '@wix/headless-seo/services';
import { SEO } from '@wix/headless-seo/react';
import { seoTags } from '@wix/seo';

// Get category slug from URL params
const { categorySlug } = Astro.params;

// Load categories and cart config in parallel (cart is independent)
const [categoriesConfig, currentCartServiceConfig, seoTagsServiceConfig] =
  await Promise.all([
    loadCategoriesListServiceConfig(),
    loadCurrentCartServiceConfig(),
    loadSEOTagsServiceConfig({
      pageUrl: Astro.url.href,
      itemData: { slug: categorySlug },
      itemType: seoTags.ItemType.STORES_CATEGORY,
    }),
  ]);

// Find the selected category by its slug
const selectedCategory = categoriesConfig.categories.find(
  category => category.slug === categorySlug
);

// Load collection config with selected category
const searchOptions = {
  filter: selectedCategory?._id ? { categoryIds: [selectedCategory._id] } : {},
  cursorPaging: { limit: 20 },
};
const filteredCollectionServiceConfig =
  await loadProductsListServiceConfig(searchOptions);

// If category not found, return 404
if (!selectedCategory) {
  return Astro.redirect('/404');
}
---

<BaseLayout>
  <SEO.Tags seoTagsServiceConfig={seoTagsServiceConfig} slot="seo-tags" />
  <StoreCollectionPage
    client:load
    filteredCollectionServiceConfig={filteredCollectionServiceConfig}
    currentCartServiceConfig={currentCartServiceConfig}
    categoriesConfig={{
      ...categoriesConfig,
      initialCategoryId: selectedCategory._id,
    }}
    slot="body"
  />
</BaseLayout>
