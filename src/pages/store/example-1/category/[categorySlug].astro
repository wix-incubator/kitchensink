---
import BaseLayout from '../../../../layouts/BaseLayout.astro';
import StoreCollectionPage from '../../../../react-pages/store/example-1/index';
import { loadProductsListServiceConfig } from '@wix/headless-stores/services';
import { loadCurrentCartServiceConfig } from '@wix/headless-ecom/services';
import {
  loadCategoriesListServiceConfig,
  loadCategoryServiceConfig,
  loadProductsListFiltersServiceConfig,
} from '@wix/headless-stores/services';
import { loadSEOTagsServiceConfig } from '@wix/headless-seo/services';
import { SEO } from '@wix/headless-seo/react';
import { seoTags } from '@wix/seo';
import { buildSearchOptionsFromUrl } from './parseSearchOptionsFromUrl.js';

// Get category slug from URL params
const { categorySlug = '' } = Astro.params;

const categoryLoadResult = await loadCategoryServiceConfig(categorySlug);

if (categoryLoadResult.type === 'not-found') {
  return Astro.rewrite('/404');
}

const category = categoryLoadResult.config.category;
const categoryName = category?.name || '';

const searchOptions = buildSearchOptionsFromUrl(Astro.url.href, {
  cursorPaging: {
    limit: 10,
  },
  filter: {
    'allCategoriesInfo.categories': {
      $matchItems: [{ _id: category._id! }],
    },
  },
});

const [
  productsListConfig,
  categoriesListConfig,
  currentCartServiceConfig,
  productsListFiltersConfig,
] = await Promise.all([
  loadProductsListServiceConfig(searchOptions),
  loadCategoriesListServiceConfig(),
  loadCurrentCartServiceConfig(),
  loadProductsListFiltersServiceConfig(),
  loadSEOTagsServiceConfig({
    pageUrl: Astro.url.href,
    itemType: seoTags.ItemType.STORES_CATEGORY,
    itemData: {
      slug: categorySlug,
    },
  }),
]);

const seoTagsServiceConfig = await loadSEOTagsServiceConfig({
  pageUrl: Astro.url.href,
  itemData: {
    pageName: categoryName,
    seoData: {
      tags: [
        {
          type: 'title',
          children: `${categoryName} - Store`,
        },
        {
          type: 'meta',
          props: {
            content: `Browse our ${categoryName} products`,
            name: 'description',
          },
        },
      ],
    },
  },
});
---

<BaseLayout>
  <SEO.Tags seoTagsServiceConfig={seoTagsServiceConfig} slot="seo-tags" />
  <StoreCollectionPage
    client:load
    currentCartServiceConfig={currentCartServiceConfig}
    categoriesListConfig={categoriesListConfig}
    productsListConfig={productsListConfig}
    productsListFiltersConfig={productsListFiltersConfig}
    currentCategorySlug={categorySlug}
    slot="body"
  />
</BaseLayout>
