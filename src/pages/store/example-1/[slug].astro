---
import BaseLayout from "../../../layouts/BaseLayout.astro";
import ProductDetailPage from "../../../react-pages/store/example-1/products/[slug]";
import { loadProductServiceConfig } from "../../../headless/store/services/product-service";
import { loadCurrentCartServiceConfig } from "../../../headless/store/services/current-cart-service";
import { loadProductMediaGalleryServiceConfig } from "../../../headless/store/services/product-media-gallery-service";
import { loadSelectedVariantServiceConfig } from "../../../headless/store/services/selected-variant-service";
import { seoTags } from "@wix/seo";
import { loadSEOTagsServiceConfig } from "../../../headless/seo/services/seo-tags-service";
import { SEO } from "../../../headless/seo/components/SEO";

const { slug } = Astro.params;

if (!slug) {
  return Astro.redirect("/store");
}

// Load initial data for services
const productServiceConfigResult = await loadProductServiceConfig(slug);

if (productServiceConfigResult.type === "notFound") {
  return Astro.redirect("/404");
}

const productServiceConfig = productServiceConfigResult.config;

const currentCartServiceConfig = await loadCurrentCartServiceConfig();
const productMediaGalleryServiceConfig =
  await loadProductMediaGalleryServiceConfig(slug);
const selectedVariantServiceConfig =
  await loadSelectedVariantServiceConfig(slug);
const pageURL = Astro.url.href;
const itemType = seoTags.ItemType.STORES_PRODUCT;

// Essential for rendering SEO tags in SSR
const seoTagsServiceConfig = await loadSEOTagsServiceConfig({
  pageURL,
  itemData: { slug },
  itemType,
});

// Load product modifiers service configuration if product has modifiers
let productModifiersServiceConfig = null;
try {
  if (
    productServiceConfig.product.modifiers &&
    productServiceConfig.product.modifiers.length > 0
  ) {
    productModifiersServiceConfig = {
      product: productServiceConfig.product,
    };
  }
} catch (error) {
  console.warn("Could not load product modifiers service:", error);
}
---

<BaseLayout>
  <SEO
    seoTagsServiceConfig={seoTagsServiceConfig}
    itemType={itemType}
    itemData={{ slug }}
  />
  <ProductDetailPage
    client:load
    productServiceConfig={productServiceConfig}
    currentCartServiceConfig={currentCartServiceConfig}
    productMediaGalleryServiceConfig={productMediaGalleryServiceConfig}
    selectedVariantServiceConfig={selectedVariantServiceConfig}
    productModifiersServiceConfig={productModifiersServiceConfig}
    slot="body"
  />
</BaseLayout>
