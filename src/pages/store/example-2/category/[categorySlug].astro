---
import BaseLayout from "../../../../layouts/BaseLayout.astro";
import StoreCollectionPage from "../../../../react-pages/store/example-2/index";
import { loadCollectionServiceConfig } from "../../../../headless/store/services/collection-service";
import { loadCurrentCartServiceConfig } from "../../../../headless/ecom/services/current-cart-service";
import { loadCategoriesConfig } from "../../../../headless/store/services/category-service";
import { loadSEOTagsServiceConfig } from "../../../../headless/seo/services/seo-tags-service";
import { SEO } from "../../../../headless/seo/components";

// Get category slug from URL params
const { categorySlug } = Astro.params;

// Load categories to find the matching category ID
const categoriesConfig = await loadCategoriesConfig();

// Find category by its real slug
const selectedCategory = categoriesConfig.categories.find(
  (cat: any) => cat.slug === categorySlug
);

// Load initial data for services with selected category
const filteredCollectionServiceConfig = await loadCollectionServiceConfig(
  selectedCategory?._id || undefined,
  Astro.url.searchParams
);
const currentCartServiceConfig = await loadCurrentCartServiceConfig();

// If category not found, return 404
if (!selectedCategory) {
  return Astro.redirect("/404");
}

const seoTagsServiceConfig = await loadSEOTagsServiceConfig({
  pageUrl: Astro.url.href,
  itemData: {
    pageName: selectedCategory.name,
    seoData: {
      tags: [
        {
          type: "title",
          children: `Store Example 2 - ${selectedCategory.name}`,
        },
        {
          type: "meta",
          props: {
            content: `Browse our ${selectedCategory.name} products with modern card layout`,
            name: "description",
          },
        },
      ],
    },
  },
});
---

<BaseLayout>
  <SEO.Tags seoTagsServiceConfig={seoTagsServiceConfig} slot="seo-tags" />
  <StoreCollectionPage
    client:load
    filteredCollectionServiceConfig={filteredCollectionServiceConfig}
    currentCartServiceConfig={currentCartServiceConfig}
    categoriesConfig={{
      ...categoriesConfig,
      initialCategoryId: selectedCategory._id,
    }}
    slot="body"
  />
</BaseLayout>
