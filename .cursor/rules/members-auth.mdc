---
description: 
globs: 
alwaysApply: false
---
# Auth routes

The @wix/astro integration injects the following routes to the application
* `/api/auth/login` - Sends to the Wix Managed login page, accepts a `returnToUrl` for after login completion.
* `/api/auth/logout` - POST endpoint that redirects to the Wix logout url and then back to the `Referer` or to an explicitly provided query param of `returnToUrl`. Use a form with `method="POST"` to call this endpoint.

## Example logout implementation:
<note>
Whe using View Transitions in Astro with the `ClientRouter`, adding `data-astro-reload` is required for the logout to work.
</note>

```html
<form action="/api/auth/logout" method="POST" data-astro-reload>
  <button type="submit">Sign Out</button>
</form>
```

# Checking if logged in 

```ts
import { auth } from "@wix/essentials";
import { type IOAuthStrategy } from "@wix/sdk";

const userIsLoggedIn = auth.getContextualAuth<IOAuthStrategy>().loggedIn();
```

# Get Current Member

<important>Only call this method after checking `isLoggedIn`, otherwise this function will throw!</important>

```ts
import { members } from "@wix/members";
const { member } = await members.getCurrentMember();
interface GetCurrentMemberSignature {
    /**
     * Retrieves the current member.
     *
     * >**Note:**
     * >This method requires [visitor or member authentication](mdc:https:/dev.wix.com/docs/build-apps/develop-your-app/access/about-identities).
     * @returns Member profile.
     */
    (options?: GetCurrentMemberOptions | undefined): Promise<GetMyMemberResponse>;
}
export interface GetCurrentMemberOptions {
    /**
     * Predefined set of fields to return.
     *
     * Default: `"PUBLIC"`.
     * @maxSize 3
     */
    fieldsets?: SetWithLiterals[];
}
export declare enum Set {
    /**
     * Includes `id`, `contactId`, `createdDate`, `updatedDate` and the `profile` object.
     * `status`, `privacyStatus`, and `activityStatus` are returned as `UNKNOWN`.
     */
    PUBLIC = "PUBLIC",
    /** Includes `id`, `loginEmail`, `status`, `contactId`, `createdDate`, `updatedDate`, `privacyStatus`, `activityStatus` and the `profile` object. */
    EXTENDED = "EXTENDED",
    /** Includes all fields. */
    FULL = "FULL"
}
/** @enumType */
export type SetWithLiterals = Set | 'PUBLIC' | 'EXTENDED' | 'FULL';
```
Use the wix:ReadFullDocsMethodSchema with https://dev.wix.com/docs/sdk/backend-modules/members/members/get-current-member to get the type of the result, the Member type and what's available.

# Updating the current member properties

```ts
import { members } from "@wix/members";
const { member } = await members.getCurrentMember(/* ... */);
const updatedMember = await members.updateMember(member._id, dataToUpdate);
```
Use the wix:ReadFullDocsMethodSchema with https://dev.wix.com/docs/sdk/backend-modules/members/members/update-member to get the type of the dataToUpdate, the Member type and what's available.
<note>The member login email is not updateable</note>
